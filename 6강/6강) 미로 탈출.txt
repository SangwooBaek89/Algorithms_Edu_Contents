#include <iostream>
#include <stdio.h>
#include <queue>

using namespace std;
int a[101][101];
bool c[101][101];
const int dx[] = { 1, 0, -1, 0 };
const int dy[] = { 0, 1, 0, -1 };
int n, m;

void bfs(int x, int y) {
  queue<pair<int, int> > q;
  q.push(make_pair(x, y));
  while (!q.empty()) {
    x = q.front().first;
    y = q.front().second;
    q.pop();
    for (int i = 0; i < 4; i++) {
      int nx = x + dx[i];
      int ny = y + dy[i];
      if (c[nx][ny]) continue;
      if (1 <= nx && 1 <= ny && nx <= n && ny <= m) {
        if (a[nx][ny] == 1) {
          a[nx][ny] = a[x][y] + 1;
          q.push(make_pair(nx, ny));
          c[nx][ny] = true;
        }
      }
    }
  }
}

int main(void) {
  cin >> n >> m;
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= m; j++) {
      scanf("%1d", &a[i][j]);
    }
  }
  bfs(1, 1);
  cout << a[n][m] << '\n';
  return 0;
}